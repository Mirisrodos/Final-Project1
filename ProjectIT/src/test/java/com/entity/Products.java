package com.entity;


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Products generated by hbm2java
 */
@Entity
@Table(name = "products", catalog = "supermarketdb")
public class Products implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Integer productId;
	private Categories categoriesByCategoryId;
	private Categories categoriesByCategoryId_1;
	private Suppliers suppliers;
	private int productName;
	private int quantity;
	private int rating;
	private Date updateDate;
	private boolean isSoldout;
	private String productImage;
	private Set<Orderdetails> orderdetailses = new HashSet<Orderdetails>(0);

	public Products() {
	}

	public Products(Categories categoriesByCategoryId, int productName, int quantity, int rating, Date updateDate,
			boolean isSoldout) {
		this.categoriesByCategoryId = categoriesByCategoryId;
		this.productName = productName;
		this.quantity = quantity;
		this.rating = rating;
		this.updateDate = updateDate;
		this.isSoldout = isSoldout;
	}

	public Products(Categories categoriesByCategoryId, Categories categoriesByCategoryId_1, Suppliers suppliers,
			int productName, int quantity, int rating, Date updateDate, boolean isSoldout, String productImage,
			Set<Orderdetails> orderdetailses) {
		this.categoriesByCategoryId = categoriesByCategoryId;
		this.categoriesByCategoryId_1 = categoriesByCategoryId_1;
		this.suppliers = suppliers;
		this.productName = productName;
		this.quantity = quantity;
		this.rating = rating;
		this.updateDate = updateDate;
		this.isSoldout = isSoldout;
		this.productImage = productImage;
		this.orderdetailses = orderdetailses;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "categoriesByCategoryId"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "productID", unique = true, nullable = false)
	public Integer getProductId() {
		return this.productId;
	}

	public void setProductId(Integer productId) {
		this.productId = productId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Categories getCategoriesByCategoryId() {
		return this.categoriesByCategoryId;
	}

	public void setCategoriesByCategoryId(Categories categoriesByCategoryId) {
		this.categoriesByCategoryId = categoriesByCategoryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "categoryID")
	public Categories getCategoriesByCategoryId_1() {
		return this.categoriesByCategoryId_1;
	}

	public void setCategoriesByCategoryId_1(Categories categoriesByCategoryId_1) {
		this.categoriesByCategoryId_1 = categoriesByCategoryId_1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "supplierID")
	public Suppliers getSuppliers() {
		return this.suppliers;
	}

	public void setSuppliers(Suppliers suppliers) {
		this.suppliers = suppliers;
	}

	@Column(name = "productName", nullable = false)
	public int getProductName() {
		return this.productName;
	}

	public void setProductName(int productName) {
		this.productName = productName;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "rating", nullable = false)
	public int getRating() {
		return this.rating;
	}

	public void setRating(int rating) {
		this.rating = rating;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updateDate", nullable = false, length = 10)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "isSoldout", nullable = false)
	public boolean isIsSoldout() {
		return this.isSoldout;
	}

	public void setIsSoldout(boolean isSoldout) {
		this.isSoldout = isSoldout;
	}

	@Column(name = "productImage", length = 100)
	public String getProductImage() {
		return this.productImage;
	}

	public void setProductImage(String productImage) {
		this.productImage = productImage;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<Orderdetails> getOrderdetailses() {
		return this.orderdetailses;
	}

	public void setOrderdetailses(Set<Orderdetails> orderdetailses) {
		this.orderdetailses = orderdetailses;
	}

}
