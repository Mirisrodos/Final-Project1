package com.entity;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Categories generated by hbm2java
 */
@Entity
@Table(name = "categories", catalog = "supermarketdb")
public class Categories implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Integer categoryId;
	private String categoryName;
	private String decription;
	private Products productsByCategoryId;
	private Set<Products> productsesForCategoryId = new HashSet<Products>(0);

	public Categories() {
	}

	public Categories(String categoryName) {
		this.categoryName = categoryName;
	}

	public Categories(String categoryName, String decription, Products productsByCategoryId,
			Set<Products> productsesForCategoryId) {
		this.categoryName = categoryName;
		this.decription = decription;
		this.productsByCategoryId = productsByCategoryId;
		this.productsesForCategoryId = productsesForCategoryId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "categoryID", unique = true, nullable = false)
	public Integer getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(Integer categoryId) {
		this.categoryId = categoryId;
	}

	@Column(name = "categoryName", nullable = false, length = 20)
	public String getCategoryName() {
		return this.categoryName;
	}

	public void setCategoryName(String categoryName) {
		this.categoryName = categoryName;
	}

	@Column(name = "decription", length = 100)
	public String getDecription() {
		return this.decription;
	}

	public void setDecription(String decription) {
		this.decription = decription;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "categoriesByCategoryId")
	public Products getProductsByCategoryId() {
		return this.productsByCategoryId;
	}

	public void setProductsByCategoryId(Products productsByCategoryId) {
		this.productsByCategoryId = productsByCategoryId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "categoriesByCategoryId_1")
	public Set<Products> getProductsesForCategoryId() {
		return this.productsesForCategoryId;
	}

	public void setProductsesForCategoryId(Set<Products> productsesForCategoryId) {
		this.productsesForCategoryId = productsesForCategoryId;
	}

}
